# Default values
# Global values. Define shared volumes and persistence volumes. For example:
global:
  sharedVolume:
    enabled: false
  sharedPersistenceVolume: []
#     # snmp-manager volume
#     - volumeName: snmp-manager-volume
#       pvcName: snmp-manager-pvc
#       storageSize: 10Mi
#       path: /etc/snmptt/
#       accessModes: ReadWriteOnce #ReadWriteMany
#       shareFor:
#         - snmp-manager
#       storageClass: snmp-manager-hostpath

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: webconnex/asynqmon # CHANGE THIS TO YOUR IMAGE
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest" # CHANGE THIS TO YOUR IMAGE TAG. "LATEST" IS NOT RECOMMENDED. 

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""



podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  
  nodePortEnabled: false # set to true if using NodePort and you want to specify ports

  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    - name: asynqmon
      port: 4000
      targetPort: 8080
      protocol: TCP
      # nodePort: 30080
  
  
  loadBalancerIP: "" # set to the IP you want to use for the LoadBalancer
  loadBalancerSourceRanges: [] # list of IP CIDRs allowed access to load balancer (if supported)


  # externalIPs: ["10.98.0.143"]

  ## Set the Cluster IP to use
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
  ##
  # clusterIP: None

  annotations: {}
  
  externalTrafficPolicy: Cluster

  # Set the service SessionAffinity for session stickiness
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#proxy-mode-userspace
  # sessionAffinity: None

  # Customize the SessionAntiAffinity configuration. The default value for sessionAffinityConfig.clientIP.timeoutSeconds is 10800 (3 hours)
  # sessionAffinityConfig:
  #   clientIP:
  #     timeoutSeconds: 7200

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
  # httpGet:
  #   path: /
  #   port: http
# readinessProbe:
  # httpGet:
  #   path: /
  #   port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# Additional volumeMounts on the output Deployment definition.
volumeMounts: []


nodeSelector: {}

tolerations: []

nodeAffinityPreset:
  type: ""
  key: ""
  values: []

affinity:
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   - labelSelector:
  #       matchLabels:
  #         app.kubernetes.io/name: traefik
  #     topologyKey: kubernetes.io/hostname

env:
  TZ: Asia/Ho_Chi_Minh